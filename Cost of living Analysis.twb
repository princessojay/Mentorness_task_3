<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Costofliving_17170138768030' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='10' />
      </column>
      <column caption='Parameter 2' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='100' min='1' />
      </column>
      <column caption='Parameter 3' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='10' min='1' />
      </column>
      <column caption='Values Parameter' datatype='real' name='[Values Parameter]' param-domain-type='range' role='measure' type='quantitative' value='10.'>
        <calculation class='tableau' formula='10.' />
        <range max='164539.60999999999' min='0.0' />
      </column>
    </datasource>
    <datasource caption='Cost of living Analysis' inline='true' name='federated.1t1uj280ppkfdf12obgex18uvsce' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ojone' name='excel-direct.1io2qnp1243d581eff6lj1ogxmv5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/DELL/Downloads/ojone.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1io2qnp1243d581eff6lj1ogxmv5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='2'>
            <column datatype='string' name='city' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='Components' ordinal='2' />
            <column datatype='real' name='Values' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1io2qnp1243d581eff6lj1ogxmv5' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='2'>
            <column datatype='string' name='city' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='Components' ordinal='2' />
            <column datatype='real' name='Values' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10001:no:A1:D10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_560F083642FE4ABEA98F9828D18485AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_560F083642FE4ABEA98F9828D18485AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Components</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Components]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Components</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RNG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_560F083642FE4ABEA98F9828D18485AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Values</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Values]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Values</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_560F083642FE4ABEA98F9828D18485AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Correlation' datatype='real' name='[Calculation_1287466566574387202]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Values], [Values])' />
      </column>
      <column caption='correlation 2' datatype='real' name='[Calculation_1287466566592348163]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Values], [Values])' />
      </column>
      <column caption='Zero Axis' datatype='integer' name='[Calculation_1287466566893948932]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <column datatype='string' name='[Components]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Values (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[Values]' peg='0' size='3340' />
      </column>
      <column datatype='real' name='[Values]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_560F083642FE4ABEA98F9828D18485AB]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column-instance column='[Values]' derivation='Count' name='[cnt:Values:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Components]' derivation='None' name='[none:Components:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Values]' derivation='Sum' name='[sum:Values:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1287466566574387202]' derivation='User' name='[usr:Calculation_1287466566574387202:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='country, city'>
          <field>[country]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/DELL/AppData/Local/Temp/TableauTemp/#TableauTemp_0rl7a8p1gy0txx19acrd012pcnlg.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/29/2024 08:28:00 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2726</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_560F083642FE4ABEA98F9828D18485AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_560F083642FE4ABEA98F9828D18485AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Components</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Components]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Components</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_560F083642FE4ABEA98F9828D18485AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Values</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Values]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Values</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5393</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_560F083642FE4ABEA98F9828D18485AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1t1uj280ppkfdf12obgex18uvsce].[usr:Calculation_1287466566574387202:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1t1uj280ppkfdf12obgex18uvsce].[cnt:Values:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Components:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;x29&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;x49&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;x9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;x1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;x21&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;x41&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;x25&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;x45&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;x5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;x13&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;x33&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;x53&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;x10&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;x30&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;x50&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;x26&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;x46&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;x6&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;x19&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;x39&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;x2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;x22&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;x42&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;x17&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;x37&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;x27&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;x47&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;x7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;x14&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;x34&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;x54&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;x15&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;x35&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;x55&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;x18&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;x38&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;x20&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;x40&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;x11&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;x31&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;x51&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;x28&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;x48&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;x8&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;x23&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;x3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;x43&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;x16&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;x36&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;x12&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;x32&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;x52&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;x24&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;x4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;x44&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aarhus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alicante&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Arese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baguio City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bursa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cebu City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Christchurch&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cordoba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denpasar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dushanbe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gothenburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hadera&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hobart&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Irbid&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jonkoping&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Khabarovsk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Krasnodar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Leicester&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lodz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mainz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mecca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niteroi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palmerston North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Petaling Jaya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Port St. Lucie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Queretaro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rijeka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samsun&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sochi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Surabaya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tampere&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thiruva0thapuram&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trnava&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Valladolid&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vishakhapatnam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Winnipeg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zapopan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0aimo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bari&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bradford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bucharest&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cancun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chengdu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darwin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dubai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eskisehir&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Freiburg im Breisgau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guayaquil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Heidelberg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iasi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeddah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Katowice&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kocaeli&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Larisa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Limassol&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maputo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Milan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mostar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oakville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oujda-Angad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plovdiv&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prince George&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Regensburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Paulo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shiraz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stockholm&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Szombathely&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tekirdag&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Torun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ufa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wellington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yaroslavl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;`Ajman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antibes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aventura&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Basingstoke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhubaneshwar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brasov&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cartagena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Constanta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dehra Dun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dunedin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fukuoka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gliwice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guwahati&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hermosillo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ingolstadt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joao Pessoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosice&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laval&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lisbon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maastricht&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Markham&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minsk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Munich&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nicosia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Okinawa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paderborn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Perugia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pordenone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sarnia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Siena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Subotica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taipei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tetovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trento&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Utrecht&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vilnius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wiesbaden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yokohama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Abuja&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;As Sulaymaniyah&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belfast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bochum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brighton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cairns&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cluj-Napoca&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuenca&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dhaka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Edmonton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Florianopolis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gaziantep&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Graz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hradec Kralove&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Istanbul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kaliningrad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kigali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuching&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lethbridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malmo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monastir&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Naples&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pardubice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Porto Calvo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rabat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Miguel de Allende&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sevilla&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sousse&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suzhou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Targu-Mures&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Timisoara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tula&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vasteras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Volgograd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wolverhampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zrenjanin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Almaty&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ariana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beersheba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bishkek&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brescia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Busan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Celje&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cork&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dusseldorf&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faridabad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Galati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gottingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haifa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Irkutsk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jyvaskyla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kharkiv&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Krasnoyarsk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Leiden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Makati City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Medan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Modena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nagoya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nitra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pamplona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peterborough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portimao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Quezon City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rimini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seoul&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sofia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Surat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tangerang&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tromso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Valletta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vitoria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Winterthur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zaporizhzhia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Coruna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antwerp&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aydin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bat Yam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bialystok&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bratislava&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burgas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Casablanca&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chihuahua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Constantine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Delft&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Durban&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Exeter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Funchal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gloucester&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gyor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Herzliyya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Innsbruck&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kefar Sava&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kota Kinabalu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lecce&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marrakech&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miskolc&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Munster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nijmegen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Padova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pescara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Elizabeth&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reykjavik&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saskatoon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suceava&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thane&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Treviso&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzhhorod&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vina del Mar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willemstad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Agadir&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Angeles City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Auckland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Banska Bystrica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bergamo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brussels&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canakkale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chelmsford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cologne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dar es Salaam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erlangen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frankfurt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gent&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guangzhou&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haugesund&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karlsruhe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Klang&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lahore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lilongwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lugano&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manizales&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monza&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nuremberg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ostrava&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pavia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Playa del Carmen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pretoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Recife&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rzeszow&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shenyang&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Catharines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Szeged&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tegucigalpa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tyumen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Veszprem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Xi&apos;an&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0jing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aix-en-Provence&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Annecy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aurangabad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Barranquilla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Braga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Budapest&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Canterbury&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Davao&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Espoo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Girona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guelph&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Helsingborg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Incheon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kaunas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Larnaca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Limerick&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marbella&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Milton Keynes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mugla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Newcastle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Odense&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oulu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pereira&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pristina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reggio Emilia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Helier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sarajevo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shymkent&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stoke-on-Trent&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tabriz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tel Aviv-Yafo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Toulouse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ulaanbaatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wexford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yekaterinburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Addis Ababa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangkok&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belo Horizonte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charlottetown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colchester&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dortmund&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ensenada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Geneva&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Groningen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harare&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karachi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Klagenfurt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Paz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liepaja&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lucknow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mangalore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montpellier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netanya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Novosibirsk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oslo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Patna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Presov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rawalpindi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rotterdam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sharjah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tauranga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Toluca&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turku&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Warrington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wurzburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aachen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bacau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bath&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bielefeld&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Braunschweig&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cascais&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chisinau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copenhagen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fuzhou&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Goiania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gzira&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hilversum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ioannina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Johor Bahru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kelowna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kragujevac&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leeds&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liverpool&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marseille&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mississauga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Murcia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ningbo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olomouc&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palermo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peshawar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Moresby&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qingdao&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Salzburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sault Ste. Marie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Skopje&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tallinn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thessaloniki&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trieste&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vadodara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vinnytsia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Windhoek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zadar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Accra&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Amersfoort&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ashdod&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bandar Seri Begawan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgrade&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bogota&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brisbane&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cairo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cochabamba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curitiba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Diyarbakir&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eindhoven&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gdansk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hangzhou&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hsinchu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Izhevsk&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kamloops&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kingston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leuven&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Managua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moncton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nottingham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Osaka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phuket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riyadh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanaa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sfax&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swindon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tarragona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tirana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vaughan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Volos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zug&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ad Dammam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Amman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bandung&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coimbatore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cusco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dnipro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Myers&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gdynia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hannover&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hua Hin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Izmir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kampala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kingston upon Hull&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyiv&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lublin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Merida&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monterrey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nassau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Noumea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oshawa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pisa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poz0&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sandton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shah Alam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Southwick&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sydney&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tartu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vejle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Voronezh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wroclaw&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zurich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Adelaide&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ancona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Banja Luka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bordeaux&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bruges&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Campinas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Damascus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Douala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Erbil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fortaleza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Genoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guadalajara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hargeysa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karaj&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Klaipeda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lagos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lille&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ludhiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manila&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Neuchatel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nur-Sultan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Osnabruck&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Patra&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Preston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ryazan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Santo Domingo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sheffield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Szczecin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tbilisi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tomsk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tuzla&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Verona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Warsaw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Xanthi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aguascalientes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ankara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Augsburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bergen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bournemouth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bucaramanga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canberra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chelyabinsk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darmstadt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dresden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Esfahan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fredericton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Havana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hyderabad City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jammu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kathmandu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lusaka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mannheim&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middlesbrough&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pecs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ploiesti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prilep&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Red Deer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saarbrucken&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Jose dos Campos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shenzhen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stavanger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Szekesfehervar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tehran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Torrevieja&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Udine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vicenza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waterford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yaounde&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Abidjan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Almere&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baku&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bitola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brest&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bydgoszcz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ceske Budejovice&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ciudad Benito Juarez&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coventry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Derby&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eastbourne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Galway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Granada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Halifax&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Irvine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kabul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Khartoum&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kristiansand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Leipzig&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Londrina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Medellin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nizhniy Novgorod&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Omsk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quito&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Setif&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sopron&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Surrey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tangier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tijuana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trondheim&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vladivostok&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woking&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zhengzhou&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aalborg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Algiers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arequipa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baghdad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Batumi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bilbao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Breda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burnaby&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Catania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chongqing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coquitlam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denizli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Durres&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faisalabad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gaborone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gold Coast&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haarlem&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ho Chi Minh City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ipswich&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Joinvile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenitra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kranj&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leeuwarden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ljubljana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maidstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mashhad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muscat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olsztyn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palm Springs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Petah Tiqwa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port of Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quebec City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Samara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sliema&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thimphu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tripoli&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Windsor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zagreb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0tes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Al Fujayrah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anta0arivo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barrie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brampton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Budva&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cape Town&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chernivtsi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Como&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dubrovnik&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Essen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Giza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guildford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Helsinki&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kavala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Linkoping&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lviv&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maribor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Multan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Odesa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oviedo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Perm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Plzen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puebla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Regina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salamanca&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sialkot City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Strasbourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tacoma&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ternopil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Townsville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ulm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vigo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Whangarei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yerevan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amsterdam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asuncion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bologna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brno&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coimbra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dakar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doha&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Enschede&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Geelong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grenoble&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hanoi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Huddersfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jabalpur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kaohsiung&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kitchener&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyoto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liege&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lucerne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mersin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montevideo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Natal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Novi Sad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Osijek&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Passau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pitesti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prague&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ramat Gan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santander&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Split&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sylhet&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tashkent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venice&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Walton upon Thames&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wuhan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Abu Dhabi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Almeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arnhem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ballarat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beirut&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blue Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bridgetown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cagliari&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Craiova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edinburgh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gatineau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Islamabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kalach-na-Donu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuala Lumpur&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leiria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mogadishu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nairobi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Vancouver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oradea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paphos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phnom Penh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Porto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ra`a0na&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rishon LeZiyyon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Luis Potosi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Setubal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sorocaba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suva&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tanta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tilburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Varna&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vlore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wollongong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zilina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;&apos;s-Hertogenbosch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alajuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Antalya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aveiro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Basel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brasilia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Caracas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Concepcion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Debrecen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dundee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fribourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Glasgow&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gurgaon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Heredia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jerusalem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kayseri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Konya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lausanne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Linz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maringa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oeiras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oxford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Perth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Podgorica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Puerto Vallarta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rehovot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saratov&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sibiu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stuttgart&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taichung&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tetouan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trabzon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uppsala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vila Nova de Gaia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yogyakarta&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_560F083642FE4ABEA98F9828D18485AB'>
            <properties context=''>
              <relation connection='excel-direct.1io2qnp1243d581eff6lj1ogxmv5' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='city' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='string' name='Components' ordinal='2' />
                  <column datatype='real' name='Values' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_6F3A0AC395B84673A5990FFEB47830C5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Cost of living pattern' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cities with the highest and lowest cost of living'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Cities with the highest and lowest cost of living</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cost of living Analysis' name='federated.1t1uj280ppkfdf12obgex18uvsce' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1t1uj280ppkfdf12obgex18uvsce'>
            <column datatype='real' name='[Values]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[Values]' derivation='Sum' name='[sum:Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:city:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Values])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' included-values='in-range'>
            <min>4816.4499999999998</min>
            <max>287566.66000000003</max>
          </filter>
          <slices>
            <column>[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]</column>
            <column>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:city:nk]' />
              <text column='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]</rows>
        <cols>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:city:nk]</cols>
      </table>
      <simple-id uuid='{0F139DC2-2A3C-4235-9F17-AFD2B41AA0EF}' />
    </worksheet>
    <worksheet name='Correlation Analsis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>Correlation Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cost of living Analysis' name='federated.1t1uj280ppkfdf12obgex18uvsce' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 3' datatype='integer' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1t1uj280ppkfdf12obgex18uvsce'>
            <column caption='Correlation' datatype='real' name='[Calculation_1287466566574387202]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR([Values], [Values])' />
            </column>
            <column datatype='string' name='[Components]' role='dimension' type='nominal' />
            <column datatype='real' name='[Values]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_560F083642FE4ABEA98F9828D18485AB]' role='measure' type='quantitative' />
            <column-instance column='[Components]' derivation='None' name='[none:Components:nk]' pivot='key' type='nominal' />
            <column-instance column='[Values]' derivation='Sum' name='[sum:Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1287466566574387202]' derivation='User' name='[usr:Calculation_1287466566574387202:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t1uj280ppkfdf12obgex18uvsce].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t1uj280ppkfdf12obgex18uvsce].[usr:Calculation_1287466566574387202:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]'>
            <groupfilter count='[Parameters].[Parameter 3]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Sheet1_560F083642FE4ABEA98F9828D18485AB])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Components:nk]' member='&quot;x30&quot;' />
                  <groupfilter function='member' level='[none:Components:nk]' member='&quot;x31&quot;' />
                  <groupfilter function='member' level='[none:Components:nk]' member='&quot;x32&quot;' />
                  <groupfilter function='member' level='[none:Components:nk]' member='&quot;x48&quot;' />
                  <groupfilter function='member' level='[none:Components:nk]' member='&quot;x49&quot;' />
                  <groupfilter function='member' level='[none:Components:nk]' member='&quot;x50&quot;' />
                  <groupfilter function='member' level='[none:Components:nk]' member='&quot;x51&quot;' />
                  <groupfilter function='member' level='[none:Components:nk]' member='&quot;x54&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1t1uj280ppkfdf12obgex18uvsce].[:Measure Names]</column>
            <column>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[:Measure Names]' value='50' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[usr:Calculation_1287466566574387202:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1t1uj280ppkfdf12obgex18uvsce].[usr:Calculation_1287466566574387202:qk]' />
              <lod column='[federated.1t1uj280ppkfdf12obgex18uvsce].[usr:Calculation_1287466566574387202:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.33983424305915833' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t1uj280ppkfdf12obgex18uvsce].[Multiple Values]</rows>
        <cols>([federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk] / [federated.1t1uj280ppkfdf12obgex18uvsce].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{5F87493E-2BAF-46EE-A34A-83AAB0AE62FE}' />
    </worksheet>
    <worksheet name='Cost of living pattern'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Pattern of cost of living </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cost of living Analysis' name='federated.1t1uj280ppkfdf12obgex18uvsce' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1t1uj280ppkfdf12obgex18uvsce'>
            <column datatype='string' name='[Components]' role='dimension' type='nominal' />
            <column datatype='real' name='[Values]' role='measure' type='quantitative' />
            <column-instance column='[Components]' derivation='None' name='[none:Components:nk]' pivot='key' type='nominal' />
            <column-instance column='[Values]' derivation='Sum' name='[sum:Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Values])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Components:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' />
              <text column='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' />
              <lod column='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5492265224456787' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]</rows>
        <cols>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]</cols>
      </table>
      <simple-id uuid='{88024B25-2546-4311-81F0-C5F0299FC7F0}' />
    </worksheet>
    <worksheet name='Countries with the highest and lowest cost of living'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='12'>Countries with the highest and lowest cost of living</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cost of living Analysis' name='federated.1t1uj280ppkfdf12obgex18uvsce' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 2' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='100' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1t1uj280ppkfdf12obgex18uvsce'>
            <column datatype='real' name='[Values]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Values]' derivation='Sum' name='[sum:Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1t1uj280ppkfdf12obgex18uvsce].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1t1uj280ppkfdf12obgex18uvsce].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:country:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([city])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1t1uj280ppkfdf12obgex18uvsce].[Latitude (generated)]</column>
            <column>[federated.1t1uj280ppkfdf12obgex18uvsce].[Longitude (generated)]</column>
            <column>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:country:nk]' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='poi-relevant-scalerank4-l15' value='false' />
            <format attr='enabled' id='poi-relevant-scalerank4-l1' value='false' />
            <format attr='enabled' id='poi-parks_scalerank4' value='false' />
            <format attr='enabled' id='poi-scalerank3' value='false' />
            <format attr='enabled' id='poi-parks-scalerank3' value='false' />
            <format attr='enabled' id='poi-outdoor-features' value='false' />
            <format attr='enabled' id='poi-outdoor-features-2' value='false' />
            <format attr='enabled' id='mountain-peak-label' value='false' />
            <format attr='enabled' id='mountain-peak-label-with-elevation' value='false' />
            <format attr='enabled' id='poi-scalerank2' value='false' />
            <format attr='enabled' id='poi-parks-scalerank2' value='false' />
            <format attr='enabled' id='poi-parks-scalerank1' value='false' />
            <format attr='enabled' id='poi-scalerank1' value='false' />
            <format attr='enabled' id='airport-label' value='false' />
            <format attr='enabled' id='admin-3-4-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-3-4-boundaries' value='false' />
            <format attr='enabled' id='water-label-sm' value='false' />
            <format attr='enabled' id='water-label' value='false' />
            <format attr='enabled' id='waterway-label' value='false' />
            <format attr='enabled' id='marine-label-sm-ln' value='false' />
            <format attr='enabled' id='marine-label-sm-pt' value='false' />
            <format attr='enabled' id='marine-label-md-ln' value='false' />
            <format attr='enabled' id='marine-label-md-pt' value='false' />
            <format attr='enabled' id='marine-label-lg-ln' value='false' />
            <format attr='enabled' id='marine-label-lg-pt' value='false' />
            <format attr='enabled' id='state-label-sm' value='false' />
            <format attr='enabled' id='state-label-md' value='false' />
            <format attr='enabled' id='state-label-lg' value='false' />
            <format attr='enabled' id='country-label-sm' value='false' />
            <format attr='enabled' id='country-label-md' value='false' />
            <format attr='enabled' id='country-label-lg' value='false' />
            <format attr='enabled' id='place-hamlet' value='false' />
            <format attr='enabled' id='place-village' value='false' />
            <format attr='enabled' id='place-town' value='false' />
            <format attr='enabled' id='place-city-sm' value='false' />
            <format attr='enabled' id='place-islet-archipelago-aboriginal' value='false' />
            <format attr='enabled' id='place-islet-archipelago-aboriginal-2' value='false' />
            <format attr='enabled' id='place-city-md-s' value='false' />
            <format attr='enabled' id='place-city-md-n' value='false' />
            <format attr='enabled' id='place-city-lg-s' value='false' />
            <format attr='enabled' id='place-city-lg-n' value='false' />
            <format attr='enabled' id='place-island' value='false' />
            <format attr='enabled' id='place-island-2' value='false' />
            <format attr='enabled' id='housenum-label' value='false' />
            <format attr='enabled' id='building-line' value='false' />
            <format attr='enabled' id='building' value='false' />
            <format attr='enabled' id='rail-label' value='false' />
            <format attr='enabled' id='place-residential' value='false' />
            <format attr='enabled' id='place-neighbourhood' value='false' />
            <format attr='enabled' id='place-suburb' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:country:nk]' value='Most expensive Country: United States'>
              <formatted-text>
                <run>Most expensive Country: United States</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:country:nk]' />
              <size column='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' />
              <lod column='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.66966849565505981' />
                <format attr='mark-color' value='#aa007f' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#4e79a7' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-range-field' value='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:country:nk]' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t1uj280ppkfdf12obgex18uvsce].[Latitude (generated)]</rows>
        <cols>[federated.1t1uj280ppkfdf12obgex18uvsce].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3E8FF35D-F9D6-4FF5-B9B0-259594BC006F}' />
    </worksheet>
    <worksheet name='Major cost component contributing to the overall cost of living'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='10'>Major cost components contributing to the overall cost of living</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Cost of living Analysis' name='federated.1t1uj280ppkfdf12obgex18uvsce' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1t1uj280ppkfdf12obgex18uvsce'>
            <column caption='Zero Axis' datatype='integer' name='[Calculation_1287466566893948932]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0' />
            </column>
            <column datatype='string' name='[Components]' role='dimension' type='nominal' />
            <column datatype='real' name='[Values]' role='measure' type='quantitative' />
            <column-instance column='[Components]' derivation='None' name='[none:Components:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1287466566893948932]' derivation='Sum' name='[sum:Calculation_1287466566893948932:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Values]' derivation='Sum' name='[sum:Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Values])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Components:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Calculation_1287466566893948932:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Calculation_1287466566893948932:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Calculation_1287466566893948932:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' value='c&quot;$&quot;#,##0,,.0M;-&quot;$&quot;#,##0,,.0M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Calculation_1287466566893948932:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]' />
              <wedge-size column='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' />
              <size column='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' />
              <text column='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.0901985168457031' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Calculation_1287466566893948932:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.1546962261199951' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Calculation_1287466566893948932:qk] + [federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Calculation_1287466566893948932:qk])</rows>
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor y-index='1'>
                  <x-fields y-index='1' />
                  <y-fields y-index='1'>
                    <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Calculation_1287466566893948932:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Calculation_1287466566893948932:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{DF7471B3-DDE7-4CB3-95D6-6D6F47D5C541}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='960' maxwidth='2000' minheight='160' minwidth='1800' sizing-mode='range' />
      <datasources>
        <datasource caption='Cost of living Analysis' name='federated.1t1uj280ppkfdf12obgex18uvsce' />
      </datasources>
      <datasource-dependencies datasource='federated.1t1uj280ppkfdf12obgex18uvsce'>
        <column datatype='real' name='[Values]' role='measure' type='quantitative' />
        <column-instance column='[Values]' derivation='Sum' name='[sum:Values:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='11' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97978' id='14' param='vert' type-v2='layout-flow' w='99112' x='444' y='1011'>
            <zone h='97978' id='12' type-v2='layout-basic' w='99112' x='444' y='1011' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='84576' id='3' name='Countries with the highest and lowest cost of living' w='42333' x='-4722' y='14159' />
        <zone h='84576' id='5' name='Cities with the highest and lowest cost of living' w='36722' x='37389' y='13906' />
        <zone forceUpdate='true' h='5057' id='10' type-v2='text' w='40167' x='833' y='632'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='22'>Cost of Living Analysis</run>
          </formatted-text>
        </zone>
        <zone h='7712' id='15' name='Cities with the highest and lowest cost of living' param='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' type-v2='filter' values='database' w='12333' x='51278' y='1138' />
        <zone forceUpdate='true' h='7206' id='16' type-v2='text' w='13444' x='1167' y='5815'>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontsize='12'>Most expensive Country: United States</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone h='6953' id='17' type-v2='text' w='13500' x='19167' y='5942'>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontsize='12'>Least expensive Country:
Afghanistan</run>
          </formatted-text>
        </zone>
        <zone h='379' id='18' type-v2='empty' w='100000' x='-333' y='13274'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97978' id='21' param='vert' type-v2='layout-flow' w='99112' x='444' y='1011'>
                <zone forceUpdate='true' h='5057' id='10' type-v2='text' w='40167' x='833' y='632'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='22'>Cost of Living Analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7206' id='16' type-v2='text' w='13444' x='1167' y='5815'>
                  <formatted-text>
                    <run bold='true' fontcolor='#4e79a7' fontsize='12'>Most expensive Country: United States</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6953' id='17' type-v2='text' w='13500' x='19167' y='5942'>
                  <formatted-text>
                    <run bold='true' fontcolor='#e15759' fontsize='12'>Least expensive Country:
Afghanistan</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7712' id='15' name='Cities with the highest and lowest cost of living' param='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' type-v2='filter' values='database' w='12333' x='51278' y='1138'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='84576' id='5' is-fixed='true' name='Cities with the highest and lowest cost of living' w='36722' x='37389' y='13906'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='84576' id='3' is-fixed='true' name='Countries with the highest and lowest cost of living' w='42333' x='-4722' y='14159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DD9BAEFA-6D93-4E88-89AE-F521D07445BC}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='860' maxwidth='2120' minheight='800' minwidth='1820' sizing-mode='range' />
      <zones>
        <zone h='42750' id='5' name='Correlation Analsis' w='37033' x='36044' y='20125' />
        <zone h='8000' id='6' name='Correlation Analsis' pane-specification-id='0' param='[federated.1t1uj280ppkfdf12obgex18uvsce].[usr:Calculation_1287466566574387202:qk]' type-v2='color' w='12967' x='54121' y='5375' />
        <zone forceUpdate='true' h='6375' id='7' type-v2='text' w='21154' x='165' y='1250'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='22'>Cost of living analysis</run>
          </formatted-text>
        </zone>
        <zone h='500' id='8' type-v2='empty' w='100385' x='-19121' y='20000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
        <zone h='33125' id='9' name='Cost of living pattern' w='47802' x='824' y='65500' />
        <zone forceUpdate='true' h='35750' id='10' type-v2='text' w='24505' x='48846' y='62500'>
          <formatted-text>
            <run bold='true' fontcolor='#0d0d0d' fontname='ui-sans-serif' fontsize='12'>These insights can serve as valuable aids for individuals and organisations in formulating strategic decisions. Clar correlations and trends become apparent by examining factors such as housing costs, transportation expenses, and average salaries. For instance, cities experiencing a surge in housing costs may also witness a corresponding rise in other living expenses. Additionally, regions with higher average salaries tend to exhibit increased costs across various commodities and services.</run>
          </formatted-text>
        </zone>
        <zone h='45125' id='11' name='Major cost component contributing to the overall cost of living' w='34670' x='440' y='21125' />
        <zone h='10375' id='12' leg-item-layout='vert' leg-item-order='normal' name='Major cost component contributing to the overall cost of living' pane-specification-id='1' param='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]' type-v2='color' w='23297' x='2198' y='6875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='15' param='vert' type-v2='layout-flow' w='99120' x='440' y='1000'>
                <zone forceUpdate='true' h='6375' id='7' type-v2='text' w='21154' x='165' y='1250'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='22'>Cost of living analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42750' id='5' is-fixed='true' name='Correlation Analsis' w='37033' x='36044' y='20125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='6' name='Correlation Analsis' pane-specification-id='0' param='[federated.1t1uj280ppkfdf12obgex18uvsce].[usr:Calculation_1287466566574387202:qk]' type-v2='color' w='12967' x='54121' y='5375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45125' id='11' is-fixed='true' name='Major cost component contributing to the overall cost of living' w='34670' x='440' y='21125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10375' id='12' leg-item-layout='vert' leg-item-order='normal' name='Major cost component contributing to the overall cost of living' pane-specification-id='1' param='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]' type-v2='color' w='23297' x='2198' y='6875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='35750' id='10' type-v2='text' w='24505' x='48846' y='62500'>
                  <formatted-text>
                    <run bold='true' fontcolor='#0d0d0d' fontname='ui-sans-serif' fontsize='12'>These insights can serve as valuable aids for individuals and organisations in formulating strategic decisions. Clar correlations and trends become apparent by examining factors such as housing costs, transportation expenses, and average salaries. For instance, cities experiencing a surge in housing costs may also witness a corresponding rise in other living expenses. Additionally, regions with higher average salaries tend to exhibit increased costs across various commodities and services.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33125' id='9' is-fixed='true' name='Cost of living pattern' w='47802' x='824' y='65500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{805182F2-FC5B-4D98-9BBC-88FB5B407FAF}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Countries with the highest and lowest cost of living'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]</field>
            <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:country:nk]</field>
            <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
      </viewpoint>
      <simple-id uuid='{3DC8906F-4D25-4E54-B88B-2A2E717CBCA6}' />
    </window>
    <window class='worksheet' name='Cities with the highest and lowest cost of living'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD2BB88A-4880-43BE-AA53-AFFAAB7C32AD}' />
    </window>
    <window class='worksheet' name='Major cost component contributing to the overall cost of living'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]</field>
            <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79ACA126-01C2-48A2-BE83-9C1625F693A2}' />
    </window>
    <window class='worksheet' name='Correlation Analsis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t1uj280ppkfdf12obgex18uvsce].[usr:Calculation_1287466566574387202:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]</field>
            <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[usr:Calculation_1287466566574387202:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F07589B2-78C4-437A-8E04-23346375EEEB}' />
    </window>
    <window class='worksheet' name='Cost of living pattern'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]</field>
            <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[none:country:nk]</field>
            <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA1C1169-930C-4D69-A3A5-73BFD04AE7D3}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cities with the highest and lowest cost of living'>
          <zoom type='fit-width' />
          <highlight field='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:city:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Countries with the highest and lowest cost of living'>
          <zoom type='entire-view' />
          <highlight field='[federated.1t1uj280ppkfdf12obgex18uvsce].[sum:Values:qk]' type='size'>
            <bucket-selection />
          </highlight>
          <map-scale-visibility value='0' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{56BBFD0F-C154-4BA1-A525-A5081644A87A}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Correlation Analsis'>
          <zoom type='fit-width' />
          <highlight>
            <color-one-way>
              <field>[federated.1t1uj280ppkfdf12obgex18uvsce].[usr:Calculation_1287466566574387202:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Cost of living pattern'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Major cost component contributing to the overall cost of living'>
          <zoom type='fit-width' />
          <highlight field='[federated.1t1uj280ppkfdf12obgex18uvsce].[none:Components:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{84B5B881-2B75-495C-BD51-4BFE5BE2E3EF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cities with the highest and lowest cost of living' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Correlation Analsis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cost of living pattern' width='192'>
      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
      /wG59Q7ukZjOtAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Countries with the highest and lowest cost of living' width='192'>
      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
      EQtOSqcQNOy+hVUM7PdRpuZtlXVCK2femUCY24jSgf77bo1nuvUrHyuGD+f35i+RKMGheCIn
      m+1OznJujRe0jDy1DMGT7QbnMpvPTi9zIOjxYFUigO+1AtYKyYJTsLIF5ZEaU/v8QHX9irvG
      KKVItMV/WpsZ7Ln2boRE8+HGEtN2hoNb8pBkSS1X5TOcfG6hBU81tw2EH6BhZZPrAQYQmoaT
      8snZU/zpxVuZdVI+PXuWHMn313aw1+/wK3MnkYNVw/gJQxJb6QyUwmxhc4uvSqLa1cJ4klNx
      yCvRtSdYUiV4qVfhxU6VpHTObDQfqCX8oOWzw0353flLpBrOpy5HooBZJ2OXm/K3rQbHywqy
      c2V292trs9we97g3NJq/AL7fCljPt87xi5Tkm6sun5qJsGQwcRLYtktd5tiq4Eb2Ed1KvL8a
      8+OOd80kxY2YtTM+XF/hpqCFxB0kZyWCghSQeJ5NnivsCebkiW6dE3F9bCU7nwajTXBM6n8Y
      xRkKqEIwaydcygL+n/P70Ahu8ns8NnOBvrtMqem1zkA4m5icZu8uQb9/59WIdIly+Obq7CYz
      5krQQvCD1jjX3wLcsu2JEKb+2RWwx0/Y5bfpk/Q+Ob3KN1dnODniNygEL0cVXnTklLQAACAA
      SURBVO6Z7Z7mbIVAYwlMDcBWQAhOJR7rRYcpHFNzsGESCGFYn9eUjHyb4vnu6xd+NNxfaXFT
      sI7ZrsvIhCI13DRM3UqapYTW5ICCmpC3UXpDO2dNjiY1fT2FRmlD+Pruym4u5UYwXFmwx4/4
      3OxF7AFlVo9c3JDn+nUEw2srFAUFEabA5gqhUQ1Hoirda+XzXwEJ8P11kzw7m7qs58bU6/sx
      fZOvYikenWpOpvcKWC4sDiUOC5ai8jq4UFdCUzmciB0y3Rp8VhR52bjKlDemwqWzhYUzNxpv
      aNcdAc1clDQvwSgRU5MaWROKsGqxuhpNvMSJZPOecwhhag+Nnb5ZvxTK4fGlm7iUD4tSPjF9
      nt1BCyn6pXyGNmE0P+VnNpqMIQfb7I8izC9Aa4zTp+2JLRYFNj/t1Lco2SMoysv4QuFbMYUo
      Rha4ofM5bQveX4s5kzq8lkzuYnFxSzfOGOJbzRkcscIBv4vUkOYdfK+GpIJSBeczdwvLZn7R
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Major cost component contributing to the overall cost of living' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZ1UlEQVR4nO3dWXAc94Hf8W/33MBcuA8CBAECPESKl0RKpI6VInllr+R1dqvWteVKykml
      /JaHpJy85Ml5iatSWW/FsSuv1j5YDiVZx2ph05REUbsiQZCESBAESAAkcRAYAIPBYO67/3kA
      CRIkCIKY6ZkB+/95Y3Hm338A/ev+9/9qRQghkCSDUktdAUkqJRkAydBkACRDkwGQDE0GQDI0
      GQDJ0GQAJEOTAZAMTQZAMjQZAMnQZAAkQ5MBkAxNBkAyNBkAydBkACRDkwGQDE0GQDI0GQDJ
      0GQAJEOTAZAMTQZAMjQZAMnQZAAkQ5MBkAxNBkAyNBkAydBkACRDkwGQDE0GQDI0GQDJ0GQA
      JEOTAZAMTQZAMjQZAMnQZAAkQ5MBkAxNBkAyNBkAydBkACRDkwGQDE0GQDI0GQDJ0GQAJEOT
      AZAMTQZAMjQZgKdIIBDg888/R9M0gsEgmUwGgFwuR39/P8lkkqmpKYQQBAIBotFoiWtcejIA
      TwkhBKdPnyadThONRvnoo49YWFgA4KuvvsLhcHDq1Ck++eQTAoEAX375JYODgyWudenJADwl
      FEXhwIEDjIyMkMlkOHDgwPL/VVVVcenSJVwuF7t27aK/vx+Hw4Gqyj+//A08JYQQ3L59m1wu
      x9zcHBcuXODixYtMTU2RSqVwOBxkMhmcTieBQICuri4sFkupq11yihBClLoSUmFomsb8/Dz1
      9fWlrsqmIQNgMEIIctks6XSadDJBNpsll8uRy2bIZrOYTGZMZjNmixlVNWG3O7DYbJjNZhRF
      KXX1C85c6gpI+spms9yemODm6AjRcIj62hpSyQTpdBrWee2zWK1YbXYqKitxebx4q2vwVFVj
      fgqaUPIOUCLJZBKbzVbwq6qmaczPzTE4cIUbI8NM3Lq13B1qtVo5dvSFghxTUVXcHi9VtXU0
      NG/B5fGgKJvvkVIGoARmZmY4fvw43//+97l9+zahUIjvfOc7WK1Wzpw5g8lkwuFw4PF4qKqq
      oqenh7feeuuR5QkhiMdi9J3v5cqlS/imlh6GH6QoCkdfPILNZivwT6RQ6XLRvLWNxi0t2OyO
      TdNckk2gEpibm8PlctHS0oLT6eTMmTMkk0lisRhXr17l2WefJRaL4ff78Xg8RCKR1QsSAhFc
      oPsPf6Dn275VT/qVHxfE4wkdAiCIRcKMXL3CyNUB6puaaevswlNVXfZBkAEogd27d+P3+zl5
      8iTHjh3DbrcTj8ex2Wx0dnYSjUax2+0AxGIxnE7nygKEAL8frlxCmZzEOzf32JP/rmgsRlWV
      t9A/0v2VY843hX9mGm9NLds6d1BT31C2QZABKIGZmRmGhoZ4++23uXz5MsDy84DNZkNVVVpa
      WnA4HMzPz2Myme59ORyCixdg7NbyQ+wBr5dTc37i6whBLBbT5Wd6kBCC4Lyf4Lyf6rp6duzZ
      h8vjKcqxn4R8BiiRpS5H0/qvjNksDPTDwACkUw/992fTPs4EAo8txuVy8dyhA0W/IqsmE63t
      HXTs2F1WvUeb77H9KfFE/erzfvj0I+i7uOrJD/BiTfW6/pjJZHLdzaVC0nI5xkdHOPvV58zP
      zRT9+I8iA6ADIQSXLl0iFoshhFjR7IjFYkQiEdLpNIlEAiEEi4uLqxekaXD1CvzTP8KjPnNH
      jdXKLrf7sXXLZDLL3aKlkIzHudRzhhvXBksSxAfJAOhgeHiY3t5eZmdnuXr1Kp9++imw1Ow5
      ceIEJ0+e5Pz583zxxRcEg0F+/etfP1xIIgGnvoBzPbCOE0VRFI7VVLOee0qkxNOghRDcvD7E
      5d6zJBOJktZFBkAH7e3tZDIZ5ufn2bt3L1VVVQCkUim2bNmy3NNjs9no7+9n3759KwsIheCz
      T2B87MmOW1lJs8Px2M/F46U96e4KzM3S+/WXhIILJauDDIAOFhcX0TQNn89HX18fFy5cYHJy
      knA4zPj4OAMDA3g8Htra2vD5fCtnZc774Y/d8Ki+/zUoisJLtTWP/Vw0Uj4LYVLJJN+e/Ybg
      vL8kx5e9QDqZnp6msbFx3XPuhRCkBq6S/vRjXI31G+6lyWgavxgeIbRGO9/hcPDiC4c3VL5e
      FFXl2UOHadjSUtTjyjuATpqbm59owUlqcBD/3/2CxYEhYlM+Nnpdsqgqh6ur1vxMOp0u6YPw
      aoSmMdB3npmpyaIeVwagDKRu3GT+7/83IpkEIVgYGibm23hX4ZHqamxrhC+Xy5FIJjdcvl40
      TeNq30WC8/NFO6YMQJ5CoRCapm34+4vxOJc/OE7u/p4ZIVgYHCY+59/QncBpNrPXs3aXaDwW
      f+Jyi0HTclw+f5bwYrAox5MByEMoFOI3v/kNfX199PX18cEHHxC4Mxp77tw5Tpw4wfj4ON3d
      3eRyOX71q1+t+H48neb9/ot8efBZru3dvbJwTSPQP0gquHb//6Mcq6lds0u01F2ha8mk01zu
      PUsqqX9vlQxAnoQQ1NTUsLi4yDvvvMO1a9cA6O3tJZFIEIlECIfDjI6O4rivi1IIwcnhQeZj
      UYRJpe/F5+g7cghNvXfaCk3Df+kKyYUnD0Gj3UbXg5Po7hOPxTf8nFEMyUSCq30X0TR9B8tk
      APJgNps5fPgwFy5cIJlMMjs7S0VFBbD0ELxr1y6mp6fp6Oigp6eHxsbG5e9emp5kcNZ3rzBF
      YWj/Hs689hLZ+ya/iWyO+csDpKNPNolNURSOrtElGk+UdwAAAv5ZxkdHdD2GnA2aB6vVyvj4
      OEePHqW6upqBgQGOHDmCz+fjpZdeYmxsjGPHjqEoCnV1dct3gJlIiFOj11ctc7xjG/GKCl49
      eRp7amnej5bJ4L94mbrn9mN1Vq67fjucTuptNuZSD88fSiZTZLNZrFbrBn7y4rlxfQhPdTXV
      tfcW+odCISYmJti7dy9+vx+32006nSaVSlFbW4uiKEQiERRFwWxeOsVtNhuhUAivd+VUcDkO
      UGQ5TeO//dMnaCJHVUXFI/v7PQuL/NmfTuG6b9DK5LDTcPgg5jtrBdajN7DAx9PTq/7fgQP7
      qPLquTagMByVlbz42puYzWaEELz//vuoqsqrr77K2NgYMzMzdHZ2MjY2xp49e2hqauKzzz5D
      URSqq6tJpVLs3buX9957j5/+9KcrypZNoCL749AgV6anueqbZdQ/T+YR83xC1V7+9JffZb7u
      XjMml0ji7+snt8oV/VH2eT24zQ/f6CudThwVTppa22jfsYuuZ/aya99BduzZR8fO3TS3tuGp
      qsZa8NVjTy4RizE2cu+O2d7ezuzsLE6nk0Qiwa5du/B4PExOTuLxeIhGo7S3t9Pa2ko2m0VR
      FEZGRti5c+dDZcsmUBFpmRCq/2PcZifhrIWZcIRgPEFXXS3eiofX0SYrHHz5vTc59tU3bJm4
      jQJkojHm+vqpf24/pnU0X+wmEwervJz2z1NTV8eB555ne9cOGhobcdx5XllLNpshFokQmJtl
      Zuo2sUh4oz9+XiZujtLUuhVHRSXBYJBoNMqZM2cYGxvD6/UyOzuL1+vF5/Ph9Xq5fv06iqKw
      detW3G43w8PDKzoh7pJNoCJKTLxLJvDPRDIm3p9q4gt/DTmxdBNudLvYVlON5f7VX3comsbz
      Z87TNTS83LVpq/JSd3Afqvnhz6+gqkQbm1jYtZuWrW15bYcohCASCjF+Yxi/z0cul91wWRtR
      29DEgReOomkafr9/RafCRskAFEkuOUPs2n8HcW8Kwo2Yg38Yb+F6tBJQsFvMdNbV4nU8fDdQ
      NI3d/YMcOP/tcgjstTXU7t+DukpoAGjeAoePQHUNFHAFmBCCRCzG6LWrzE7dLli563Hkldfx
      VFcXrDwZgCIQQpD6+n+QDn0DTfVwX5s8J+CbQBXvTTYTzCw1aZru3A3MD57YQtA+eosj/9KD
      Obv07OCor6V23x6U+6/sFRVw5EVo7yjoib/az7Xgn2PwUh/JRHFGlusam9h/5GjBlnTKABSB
      Fp4m9u4PIJtA2KzQ0gRNdSuCEMma+Gi6kZOztWSEisNiobOuFo/D/tAfu3HKx8tffI0tlQbA
      2dJM1a6upRA0NcMrr4LTVbSfL5VKMnSpD/+M7/EfzpOiqhx55TXc3rUn/K2X6Wc/+9nPClKS
      9Eipnv+LNnURACWXQwmGYPbOhK9KB6gqNlWw3xPhuaoQs0kbUwkzc5EoWU3DbbetaLtH3S6m
      trbQPDGFNZ0hHY6gZbLYXziC8vobYH/8ophCMpvN1DdvIZfN6r+4RQi0XI765i0FKU7eAXQm
      UmFi7/4AEVt9wYewWaG1CRrv3RFyAs4Gqnh/qonZlBWHxbrq3aAiGuPVk6epmQ/g+t538f7b
      f7OyKVRkd5c63rw+pOtxFEXhlT//C2xPMB7yyLJkAPSVuf4Hkt3/9bGfuxeEerjTs5PIqfx+
      qpE/zdWS1kw0ez20VVdhuu8kN6cz/FUwyvYf/hBllf7+YhNCMDzQz8TNUV2Ps2vfAVrbt+dd
      jgyAjoQQJD/7T2RHv1j/dx4IghAwmbDzu9vNfLvoxm6x0lVfh8exdPXb4vHyo4NHHn5gLiFN
      0+g/fw7/zOoj0IXgranl+ZdezfthWI4E6ykVITt+5om+oqTSKKPjcKEfbvtQtBxbK5L8l66b
      /OfOW7jVKFemfdyaD2Azm3nnmX1ldfIDqKrK7v0Hsa9jgf5GhYMLxGP5T+mWAdBR9tbXkNnY
      nHYlmVoKQu9luO1DzeU4Uh3if+4d4q+bpglEFji0pY3qivVPjismm93OMweeg3Vt1PLkNE3D
      78u/10kGQEfZibN5l7HijjA1g40sf9Myw/96UfByR/5tYD1V19XT0NysW/nBQP47ScgA6ERo
      WXJTfQUrT0mmUEbGlu4I035at72NWS2vps+DFEVh++49qDrVc3EhkNdyVJAB0I0ITyHChX8I
      VFJpzKkGTJUdBS9bDxWVThq2FKbP/kHZTIZIaGNLRu+SAdBJbqoPhD7L+ayHfrxpXkekKApb
      Ozp1Kz8YyG8Hic3xWywhIQTDw8MkEktvVAyHw8tLCVOpFNFolFwut/TSOSAeX5oToy2M6VIf
      xdmIacshXcrWi8vjxeXRZ+FNNBTK6/syAI8xNTVFd3c3N2/epLu7m2+++YbBwcHlHaC7u7s5
      d+4cH374IbFYjJ///OcAaItjutTHvOMtFEtxpzrkS1EUGgo0deFB8Vg0r7XNMgCPUV9fj91u
      JxwOY7FYltegKopCW1sblZWVeL1eKioquHz58vJGt1pwXJf6mNuO6VKu3qpq63QpN5lI5LVz
      hAzAY8RiMVRVZXp6mkQiQUNDAz6fj7m5OY4fP47L5SKbzbJjxw6GhoZwOp0ILYu2qMMWf5YK
      1IZnCl9uEThdbizWwi+vTKeS5LIbD0DpJ4+UOa/Xy5tvvklLSwsmk4l0Oo3dbieXy/GTn/wE
      IcTy+726urpQFAWRCEIuXfC6KM56VEdhpgEXm9liwelyEQysfz3zegghSCYTG167LAPwGIqi
      0NFxr8vx7rpSs9m8vOXGXXenLGtpfV5EZ6pq16XcYnFUOvPutVlNLo+NfmUTSAciEwcKP8dQ
      cTUUvMxiWs8i/I3I51VLMgA6EDrdARTb498BVs5MOk3XzmU3vjhfBkAPGZ3Wx5rzXwBSSmaz
      Pq9HzcoAlBmzTv30ucI+QBZbvvN2HsX0uK1h1iADoAO9BqrEBqdWl4tspvA9YwAm08abVjIA
      erDq87AnQsXdg6fQ9No6JZ83z8sA6ECxVKDHQhBtUZ/R5WKJx/TpHHiwO/pJyADoQKmsBVPh
      H/i08DQikd/031LJZbPENvDq1/Ww5jHCLAOgA0U1o7h1WAmVSZCbvVr4cosgHovq8sojm90u
      m0DlSK1q06Xc7NS3upSrtwW/Pi/CtjsqHr036jrIAOhE9bQWrCwhFJKpJhaCLzN91obIY+Sz
      VGZ9U7qU66iszGtrFDkXSCemhj3k8ypqTZhIp+uJx7cTT3SQ05Z2kCaWIXZrBmenPvPr9RCL
      hAnrtGVipSu/0XEZAJ2oDXtANYO2vlHKpTUdCql0I/FEB4lEO9mci9V6kxbODFC5vblgOyTr
      SQjB5K2bur2Qz1v96BcBrocMgE5UTwuKqwkRWntdgCZMpFMNxBMdd670j3616V2Rq2MkfQEc
      zbWFqq5uUskE05P6dN+azGbceb7jTAZAJ4rJiqlpP9lVAiCESipdTzzeRTzZRu4RV/pHEdkc
      cyfOs/Xffbes7wJCCG5eG8prstpa3F5v3vOLZAB0ZG49TPbaZ8Cdkz7VRDzRTjzZfuek37jI
      wC0ig+O492wrQE31EVoI6Hb1B6iqyX+ZpQyAjkxtL5HKtBKLbiOe3EYu56SQI8S+j77G0VKH
      xVN+2yPmkmmGz55HaJpub6mpb8p/rEV2g+pIcTYQq/mPRGLPPnEzZz0ywShTx08hcvrMstwo
      IQQzn3yD/fQtKqYTd5/wC8rtrcq7BwhkAHSlKAqeA126HiN6bYKZz84gtPLY5V4Igf/ziwTP
      D6Fq4L4RoWowhJoq7NhFY0trXm+8vEsGQGfOna2ojse/zzcfgX/ux//5BV2PsR5CCILnhpg7
      cX55RagC2AMpai4tYF1IFeRuUMh9hmQAdGZ2OvAe2qHvQQTMnTjPzD+eQctji5C8qnDnyj/9
      4elVT3JzSqN6YBHXWBQll18IahubsDsKM+VcBqAIal7Zh2LS/1c9/9Ulbv/2c7LxpO7Hup+W
      yjD9wWnm/tgLazTFFMA5Gaf6ShBTYmNdo4qi0La9cM1KGYAisNZ6cO8rzl7+4cs3uPGL48Ru
      TOs2+nqXEIL4xBw3/8/vCfYMrvt71nCG2r4FHDNP/oDsranNe/T3fvIdYUWSmJzjxi9/Dzqt
      i32IquJ9fgcN33sBs6uioANmQgi0ZJrZP/QS7B1EZDbW7BJAss5OqNOFsKzvWnzo6MvU1Bdu
      exgZgCKa+IcThC/fKOoxFYsJ73M7qX11P9Z6b15BEEKQWQiz0DNE8OxVconCLNLPOkws7nCT
      cVvWHDOorq3j0LFXChpmGYAiSgfCjP79+2gFOnGehGI24djagGf/dlzPtGHxVKKsYx69yGlk
      wjFiI7cJ9d8gNjqNyBR+aoNQILq1kmhrJagPn+CqqnK4gG+Iv0sGoMj8X1xktvtcqauBtdaD
      rbEae0MVZq8Tk92GajWjpTNo6QyZYJSUf5GkL0DaH9JlMGs1KY+F0A43OcfKSQpbt3eyc+/+
      gh9PBqDItEyW0b87Ttq/Odf2FkPOohDe7iJZZwdFwe5w8OJrb2KxFn48RfYCFZlqMbPlh6+h
      5LGZ09POlBF4r4XxDIcxabBj735dTn6QASiJivYm6v/8+VJXo6wpQMVskp325oJMensUGYAS
      UBSF2tcP4txZuHXDTyPH1nqa3nhe1zUPMgAloqgqW/72X2Gp2dw7PutFddho+dGbqFZ9NtRd
      Po6upUtrsrgrafv330O16ftH3mxUm4WtP34LW50+b5ZccSzdjyCtyd5UQ9t/eFv3K91moZiW
      7ozOrpaiHE8GoAxUbm+m+YevFWXCXFlToPFfv4ynSPOmQI4DlJXQpRFu/79TiLQ+i8jLmWJS
      afqrV6g+uqe4x5UBKC/R4Ukm3j2BltRnL/1ypNosNP31q3if21H0XS5kAMpQfHyGiXdPkA3p
      s514OVHtVrb++Ls4dxSnzf8gGYAylQ6Euf3e58RvzZS6KrqxNVbT8qM3cWwp3QZfMgBlTMtk
      me3uIfAvV9ZcabXpKAre53fS9IOXMDkK//b4J6qKDEB5E0IQGbjF9Idfk43o9PbJIjI5HTS+
      cxTv8zvLYlc7GYBNIhtNMHeil4WeoeKtKiskRcFzqIvGv3gRi/fx+58WiwzAJiKEIHnbj++T
      b4jf8pW6Outmb6mj6S+PUdFRfjtaywBsQlo2R3RoHP+XfSQm5kpdnUey1VdR+/oBPAe7UC3l
      uQunDMAmJoQgdmOauRPniY/5yuNBWYGKbU3Uvn4A1662sh/dlgF4CoicRmouyGLfCIsXr5dk
      /MDsrsRzsBPP/u04WurL/sS/SwbgKSNyGrGb04QujRK/5SPlX9TnzqCq2Oo8VGxrxLW3HWdX
      S9k2c9YiA/AUu7ujQ/yWj9joFMmZIOn5RbRUBvEEWygqZhOq3Yq12oW9uZbKjiYqtjUt7Syx
      yZd2ygAYjBCCbCRBZiFMJhRFS2fRkmlyqQxaKoNqNaPaLKg2CyabFbO7Emu1C7O7EmWV7Uo2
      OxmATUjTNAYGBti1axeappFIJHC73QSDQdxuN1arFU3TWFxcpKqqilgshtPpJB6PY7VaMZs3
      X1NFL5vjSUVa4fLly/T29jI7O8vAwACnT59mdHSUGzdu0N3dDUBPTw/ffvstFy5c4Je//CWZ
      TIbf/va3jIyMlLj25UUGYBPq6OggkUgQCoVobW3FarXS3t5OIBCgomJp2/BkMskbb7xBKBTi
      4MGD9PT0UFVV2F3VngYyAJtQKBTCZDIxNTXF7373O2w2G5OTk5jNZiKRCD6fj8rKSj7++GNq
      amrweDwMDg7S2dlZ6qqXHfkMsAkJIZiYmKC1tRVN0xBCYDKZyOVymO7s96koyvK/7/6J705D
      KLfpCKUkAyAZmmwCSYYmAyAZmgyAZGgyAJKhyQBIhiYDIBmaDIBkaDIAkqHJAEiGJgMgGZoM
      gGRoMgCSockASIYmAyAZmgyAZGgyAJKhyQBIhiYDIBmaDIBkaDIAkqHJAEiGJgMgGZoMgGRo
      MgCSockASIYmAyAZmgyAZGgyAJKhyQBIhiYDIBmaDIBkaDIAkqHJAEiGJgMgGZoMgGRoMgCS
      ockASIYmAyAZmgyAZGgyAJKhyQBIhiYDIBna/weXPzcyOhzWMQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
